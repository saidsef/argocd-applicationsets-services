name: Charts

on: [push, pull_request, workflow_dispatch]

jobs:
  chart:
    runs-on: ubuntu-latest
    if: ${{ github.event_name == 'pull_request' || contains(github.ref, 'main') }}
    steps:
      - name: Checkout source code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Install Helm
        uses: azure/setup-helm@v3
        with:
          version: v3.4.0
      - name: Setup Chart Linting
        if: ${{ github.event_name == 'pull_request' }}
        id: lint
        uses: helm/chart-testing-action@v2.3.1
      - name: Run chart-testing (list-changed)
        if: ${{ github.event_name == 'pull_request' }}
        id: list-changed
        run: |
          changed=$(ct list-changed --target-branch ${{ github.event.repository.default_branch }})
          if [[ -n "$changed" ]]; then
            echo "::set-output name=changed::true"
          fi
      - name: Run chart-testing (lint)
        if: ${{ github.event_name == 'pull_request' }}
        run: ct lint --target-branch ${{ github.event.repository.default_branch }} --validate-maintainers=false
      - name: Configure Git
        if: ${{ contains(github.ref, 'main') }}
        run: |
          git config user.name "$GITHUB_ACTOR"
          git config user.email "$GITHUB_ACTOR@users.noreply.github.com"
      - name: Copy Readme and License
        if: ${{ contains(github.ref, 'main') }}
        run: |
          cp -v *.md charts/applicationset/
      - name: Run chart-releaser
        if: ${{ contains(github.ref, 'main') }}
        uses: helm/chart-releaser-action@v1.4.0
        with:
          charts_dir: charts
          config: charts/cr.yml
        env:
          CR_TOKEN: "${{ secrets.GITHUB_TOKEN }}"

  k8s-test:
    runs-on: ubuntu-latest
    needs: [chart]
    if: ${{ ! contains(github.ref, 'main') }}
    steps:
      - name: Create k8s Kind Cluster
        uses: helm/kind-action@v1.4.0
      - name: Checkout
        uses: actions/checkout@v3
      - name: Run K8s test
        run: |
          kubectl create ns argocd
          kubectl apply -k https://github.com/argoproj/argo-cd/manifests/crds\?ref\=stable
          helm upgrade -i appsets charts/applicationset --namespace argocd --create-namespace
          helm list -A
          kubectl get all -A

  auto-approve:
    runs-on: ubuntu-latest
    needs: [chart, k8s-test]
    if: ${{ github.event_name == 'pull_request' }}
    steps:
    - name: Auto Approve PR
      uses: actions/github-script@v6
      with:
       script: |
        github.rest.pulls.createReview({
          owner: context.repo.owner,
          repo: context.repo.repo,
          pull_number: context.issue.number,
          event: "APPROVE"
        })
