{{- if and .Values.repos .Values.repos.github }}
{{- $github := .Values.github -}}
{{- $globals := .Values.globals -}}
{{- $name := .Values.name -}}
{{- $refresh := include "chart.refresh" . -}}
{{- $retryBackoffDuration := include "chart.retryBackoffDuration" . -}}
{{- $namespace := include "chart.namespace" . -}}
{{- $dqf := "{{" -}}
{{- $dqb := "}}" -}}
{{- $branch := "{{branch}}" | squote -}}
{{- $branchSlug := "{{branch_slug}}" | squote -}}
{{- $headShortSha := "{{head_short_sha}}" | squote -}}
{{- $server := include "chart.server" . -}}
{{- $notificationChannel := include "chart.notificationChannel" . -}}
{{- $pr := contains "api.github.com" $github.api | ternary "https://github.com" $github.api -}}

{{- range $key, $repo := .Values.repos.github }}
---
apiVersion: argoproj.io/v1alpha1
kind: ApplicationSet
metadata:
  name: '{{ required "A valid repo name is required" $repo.name | trunc 40 | trimSuffix "-" }}-github-{{ $name }}'
  namespace: {{ required "A valied namespace is required" $namespace | replace "." "-" }}
  labels:
    app.kubernetes.io/name: {{ $repo.name }}
    app.kubernetes.io/platform: 'github'
  annotations:
    app.kubernetes.io/managed-by: {{ $.Release.Service }}
    helm.sh/chart: '{{ $.Chart.Name }}-{{ $.Chart.Version | replace "+" "_" }}'
spec:
  syncPolicy:
    preserveResourcesOnDeletion: false
  generators:
  {{- if eq $server "all" }}
  - clusters: {}
  {{- end }}
  - pullRequest:
      github:
        api: {{ $github.api }}
        owner: {{ required "A valid repo organization / owner is required" $github.owner }}
        repo: {{ required "A valid repo name is required" $repo.name }}
        labels:
        - {{ required "A valied label(s) for PRs is required" (coalesce $github.label $globals.label) }}
        {{- if and ($github.secretName) ($github.secretKey) }}
        tokenRef:
          secretName: {{ $github.secretName }}
          key: {{ $github.secretKey }}
        {{- end }}
      requeueAfterSeconds: {{ $refresh | default 500 }}
  template:
    metadata:
      {{- $localName := printf "pr-%sbranch_slug%s-%snumber%s-%s" $dqf $dqb $dqf $dqb $name }}
      name: {{ trunc 45 $localName | trimSuffix "-" }}
      labels:
        app.kubernetes.io/name: {{ $repo.name }}
        app.kubernetes.io/branch: {{ trunc 63 $branch | trimSuffix "-" }}
        app.kubernetes.io/created-by: 'applicationset'
      annotations:
        argocd-image-updater.argoproj.io/force-update: 'true'
        argocd-image-updater.argoproj.io/update-strategy: 'latest'
        argocd-image-updater.argoproj.io/write-back-method: 'argocd'
        argocd.argoproj.io/application-set-refresh: 'true'
        argocd.argoproj.io/head: {{ $headShortSha }}
        link.argocd.argoproj.io/external-link: '{{ $pr }}/{{ $github.owner }}/{{or $repo.name $repo.path}}/pull/{{ $dqf }}number{{ $dqb }}'
        notifications.argoproj.io/subscribe.on-deleted.slack: {{ $notificationChannel }}
        notifications.argoproj.io/subscribe.on-deployed.slack: {{ $notificationChannel }}
        notifications.argoproj.io/subscribe.on-health-degraded.slack: {{ $notificationChannel }}
        notifications.argoproj.io/subscribe.on-sync-failed.slack: {{ $notificationChannel }}
        notifications.argoproj.io/subscribe.on-sync-running.slack: {{ $notificationChannel }}
    spec:
      revisionHistoryLimit: {{ $globals.revisionHistoryLimit }}
      source:
        {{- $localRepoUrl := printf "https://github.com/%s/%s.git" $github.owner $repo.name }}
        repoURL: {{ coalesce $repo.repoUrl $localRepoUrl }}
        {{- if and $repo $repo.parameters }}
        helm:
          parameters:
            {{ toJson $repo.parameters | indent 0 }}
        chart: {{ or $repo.chart $repo.name }}
        targetRevision: {{ or $repo.targetRevision ">= 0" | quote }}
        {{- else if and $repo $repo.values }}
        helm:
          values: |
            {{ toJson $repo.values | indent 0 }}
        {{- if and $repo $repo.chart }}
        chart: {{ or $repo.chart $repo.name }}
        {{- else if and $repo $repo.path }}
        path: {{ $repo.path }}
        {{- end }}
        targetRevision: {{ or $repo.targetRevision $branch $headShortSha "HEAD" }}
        {{- else }}
        targetRevision: {{ or $repo.targetRevision $branch $headShortSha "HEAD" }}
        kustomize:
          commonAnnotations:
            app.kubernetes.io/instance: '{{ $repo.name }}'
            app.kubernetes.io/part-of: {{ coalesce $github.label $globals.label }}
            argocd.argoproj.io/head_short_sha: '{{ $dqf }}head_short_sha{{ $dqb }}'
          {{- range $i, $r := $repo.images }}
          {{- if eq $i 0 }}
          images:
          {{- end }}
          - {{ $r | indent 0 | squote }}
          {{- end }}
        path: {{ coalesce $repo.path $github.path }}
        {{- end }}
      project: {{ and $.Values.project $.Values.project.enabled | ternary $name "default" }}
      syncPolicy:
        automated:
          allowEmpty: true
          prune: true
          selfHeal: true
        syncOptions:
          - CreateNamespace=true
          - Prune=true
          - PruneLast=true
        retry:
          backoff:
            duration: {{ $retryBackoffDuration }}
      destination:
        {{- if eq $server "all" }}
        server: '{{ $dqf }}server{{ $dqb }}'
        {{- else }}
        server: {{ $server }}
        {{- end }}
        namespace: {{ coalesce $repo.namespace $.Values.globals.deployToNamespace (printf "mr-%sbranch_slug%s-%snumber%s" $dqf $dqb $dqf $dqb) }}
{{- end }}
{{- end }}
