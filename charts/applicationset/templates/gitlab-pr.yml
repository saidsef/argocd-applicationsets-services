{{- if and .Values.repos .Values.repos.gitlab }}
{{- $gitlab := .Values.gitlab -}}
{{- $globals := .Values.globals -}}
{{- $refresh := coalesce .Values.requeueAfterSeconds .Values.globals.requeueAfterSeconds -}}
{{- $retryBackoffDuration := coalesce .Values.retryBackoffDuration .Values.globals.retryBackoffDuration -}}
{{- $name := .Values.name -}}
{{- $namespace := .Values.namespace | replace "." "-" -}}
{{- $dqf := "{{" -}}
{{- $dqb := "}}" -}}
{{- $branchSlug := "{{branch_slug}}" | squote -}}
{{- $headShortSha := "{{head_short_sha}}" | squote -}}
{{- $server := coalesce .Values.server .Values.globals.server | squote -}}
{{- $notificationChannel := coalesce .Values.notificationChannel .Values.globals.notificationChannel -}}

{{- range $key, $repo := .Values.repos.gitlab }}
---
apiVersion: argoproj.io/v1alpha1
kind: ApplicationSet
metadata:
  name: '{{ required "A valid repo name is required" $repo.name }}-gitlab'
  namespace: '{{ required "A valied namespace is required" $namespace | replace "." "-" }}'
  annotations:
    app.kubernetes.io/name: '{{ $repo.name }}'
    app.kubernetes.io/managed-by: '{{ $.Release.Service }}'
    helm.sh/chart: '{{ $.Chart.Name }}-{{ $.Chart.Version | replace "+" "_" }}'
spec:
  syncPolicy:
    preserveResourcesOnDeletion: false
  generators:
  - pullRequest:
      gitlab:
        api: '{{ $gitlab.api }}'
        project: '{{ coalesce $repo.project $gitlab.group |  required "A valid repo project / group ID is required" }}'
        pullRequestState: 'opened'
        labels:
        - '{{ required "A valied label(s) for PRs is required" (coalesce $gitlab.label $globals.label) }}'
        {{- if and ($gitlab.secretName) ($gitlab.secretKey) }}
        tokenRef:
          secretName: '{{ $gitlab.secretName }}'
          key: '{{ $gitlab.secretKey }}'
        {{- end }}
      requeueAfterSeconds: {{ $refresh | default 500 }}
  template:
    metadata:
      name: '{{ $repo.name }}-{{ $dqf }}branch_slug{{ $dqb }}-{{ $dqf }}number{{ $dqb }}'
      annotations:
        app.kubernetes.io/created-by: 'applicationset'
        app.kubernetes.io/name: '{{ $dqf }}branch_slug{{ $dqb }}'
        app.kubernetes.io/part-of: '{{ $name }}'
        argocd-image-updater.argoproj.io/force-update: 'true'
        argocd-image-updater.argoproj.io/update-strategy: 'latest'
        argocd-image-updater.argoproj.io/write-back-method: 'argocd'
        argocd.argoproj.io/application-set-refresh: "true"
        argocd.argoproj.io/head: '{{ $dqf }}head_short_sha{{ $dqb }}'
        argocd.argoproj.io/tracking-id: '{{$repo.name}}:{{ $dqf }}head_short_sha{{ $dqb }}'
        link.argocd.argoproj.io/external-link: '{{ $gitlab.api }}/{{ $gitlab.group }}/{{or $repo.name $repo.path}}/-/merge_requests/{{ $dqf }}number{{ $dqb }}'
        notifications.argoproj.io/subscribe.on-deleted.slack: '{{ $notificationChannel }}'
        notifications.argoproj.io/subscribe.on-deployed.slack: '{{ $notificationChannel }}'
        notifications.argoproj.io/subscribe.on-health-degraded.slack: '{{ $notificationChannel }}'
        notifications.argoproj.io/subscribe.on-sync-failed.slack: '{{ $notificationChannel }}'
        notifications.argoproj.io/subscribe.on-sync-running.slack: '{{ $notificationChannel }}'
    spec:
      source:
        {{- $localRepoUrl := printf "https://gitlab.com/%s/%s.git" $gitlab.group $repo.name }}
        repoURL: {{ coalesce $repo.repoUrl $localRepoUrl }}
        {{- if and $repo $repo.parameters }}
        helm:
          parameters:
            {{ toJson $repo.parameters | indent 0 }}
        chart: {{ or $repo.chart $repo.name }}
        targetRevision: {{ or $repo.targetRevision ">= 0" | quote }}
        {{- else if and $repo $repo.values }}
        helm:
          values: |
            {{ toJson $repo.values | indent 0 }}
        {{- if and $repo $repo.chart }}
        chart: {{ or $repo.chart $repo.name }}
        {{- else if and $repo $repo.path }}
        path: {{ $repo.path }}
        {{- end }}
        targetRevision: {{ or $repo.targetRevision $branchSlug $headShortSha "HEAD" }}
        {{- else }}
        targetRevision: {{ or $repo.targetRevision $branchSlug $headShortSha "HEAD" }}
        kustomize:
          commonAnnotations:
            app.kubernetes.io/instance: '{{ $repo.name }}'
            app.kubernetes.io/part-of: {{ coalesce $gitlab.label $globals.label }}
            argocd.argoproj.io/head_short_sha: '{{ $dqf }}head_short_sha{{ $dqb }}'
          {{- range $i, $r := $repo.images }}
          {{- if eq $i 0 }}
          images:
          {{- end }}
          - {{ $r | indent 0 | squote }}
          {{- end }}
        path: {{ coalesce $repo.path $gitlab.path }}
        {{- end }}
      project: {{ and $.Values.project $.Values.project.enabled | ternary $name "default" }}
      syncPolicy:
        automated:
          allowEmpty: true
          prune: true
          selfHeal: true
        syncOptions:
          - CreateNamespace=true
          - Prune=true
          - PruneLast=true
        retry:
          backoff:
            duration: {{ $retryBackoffDuration }}
      destination:
        server: {{ $server }}
        {{- $deployToNamespace := printf "%s-%sbranch_slug%s-%snumber%s" $repo.name $dqf $dqb $dqf $dqb }}
        namespace: {{ coalesce $.Values.globals.deployToNamespace $deployToNamespace }}
{{- end }}
{{- end }}
