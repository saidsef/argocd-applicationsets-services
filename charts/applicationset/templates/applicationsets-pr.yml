{{- $label := .Values.label | squote -}}
{{- $project := .Values.project | squote -}}
{{- $refresh := .Values.requeueAfterSeconds -}}
{{- $owner := .Values.owner -}}
{{- $path := .Values.path | squote -}}
{{- $namespace := .Values.namespace | replace "." "-" -}}
{{- $secretName := .Values.secretName -}}
{{- $secretKey := .Values.secretKey -}}
{{- $dqf := "{{" -}}
{{- $dqb := "}}" -}}
{{- $server := .Values.server | squote -}}
{{- $notificationChannel := .Values.notificationChannel -}}

{{- range $key, $repo := .Values.repos }}
---
apiVersion: argoproj.io/v1alpha1
kind: ApplicationSet
metadata:
  name: '{{ required "A valid repo name is required" $repo.name }}-github'
  namespace: '{{ required "A valied namespace is required" $namespace | replace "." "-" }}'
  annotations:
    app.kubernetes.io/name: '{{ $repo.name }}'
    app.kubernetes.io/managed-by: '{{ $.Release.Service }}'
    helm.sh/chart: '{{ $.Chart.Name }}-{{ $.Chart.Version | replace "+" "_" }}'
spec:
  syncPolicy:
    preserveResourcesOnDeletion: false
  generators:
  - pullRequest:
      github:
        owner: '{{ required "A valid repo organization / owner is required" $owner }}'
        repo: '{{ required "A valid repo name is required" $repo.name }}'
        labels:
        - {{ required "A valied label(s) for PRs is required" $label }}
        {{- if and ($secretName) ($secretKey) }}
        tokenRef:
          secretName: {{ $secretName }}
          key: {{ $secretKey }}
        {{- end }}
      requeueAfterSeconds: {{ $refresh | default 500 }}
  template:
    metadata:
      name: '{{ $repo.name }}-{{ $dqf }}branch{{ $dqb }}-{{ $dqf }}number{{ $dqb }}'
      annotations:
        argocd.argoproj.io/application-set-refresh: "true"
        argocd.argoproj.io/head: '{{ $dqf }}head_sha{{ $dqb }}'
        notifications.argoproj.io/subscribe.on-deleted.slack: '{{ $notificationChannel }}'
        notifications.argoproj.io/subscribe.on-deployed.slack: '{{ $notificationChannel }}'
        notifications.argoproj.io/subscribe.on-health-degraded.slack: '{{ $notificationChannel }}'
        notifications.argoproj.io/subscribe.on-sync-running.slack: '{{ $notificationChannel }}'
        notifications.argoproj.io/subscribe.on-sync-failed.slack: '{{ $notificationChannel }}'
    spec:
      source:
        {{- $localRepoUrl := printf "https://github.com/%s/%s.git" $owner $repo.name }}
        repoURL: {{ or $repo.repoURL $localRepoUrl }}
        targetRevision: '{{ $dqf }}head_sha{{ $dqb }}'
        {{- if and $repo $repo.parameters }}
        helm:
          parameters:
            {{ toJson $repo.parameters | indent 0 }}
        {{- else if and $repo $repo.values }}
        helm:
          values: |
            {{ toJson $repo.values | indent 0 }}
        {{- else }}
        kustomize:
          commonAnnotations:
            app.kubernetes.io/instance: '{{ $repo.name }}'
            app.kubernetes.io/past-of: {{ $label }}
            argocd.argoproj.io/head_sha: '{{ $dqf }}head_sha{{ $dqb }}'
          {{- range $i, $r := $repo.images }}
          {{- if eq $i 0 }}
          images:
          {{- end }}
          - {{ $r | indent 0 | squote }}
          {{- end }}
        {{- end }}
        path: {{ or $repo.path $path }}
      project: {{ $project | default "default" }}
      syncPolicy:
        automated:
          allowEmpty: true
          prune: true
          selfHeal: true
        syncOptions:
          - CreateNamespace=true
          - Prune=true
          - PruneLast=true
      destination:
        server: {{ $server }}
        namespace: '{{ $repo.name }}-{{ $dqf }}branch{{ $dqb }}-{{ $dqf }}number{{ $dqb }}'
{{- end }}
