# -- ApplicationSet name
name: 'pr-reviews'

# -- ArgoCD controller Namespace deployed
namespace: 'argocd'

# -- Global default variables
globals:
  # -- (int) GitHub polling rate (seconds)
  requeueAfterSeconds: 500

  # -- (int) How many old objects should be retained
  revisionHistoryLimit: 2

  # -- (string) The amount to back off retries of failed syncs
  retryBackoffDuration: '10s'

  # -- ArgoCD server address
  server: 'https://kubernetes.default.svc'

  # -- ArgoCD Slack notification channel
  notificationChannel: 'argocd'

  # -- Kubernetes namespace to deploy previews
  deployToNamespace: 'previews'

  # -- GitHub label to filter PRs that you want to target
  label: 'preview'

# -- ArgoCD Project parameters
project:
  enabled: false
  permitOnlyProjectScopedClusters: false
  clusterResourceBlacklist:
  - group: 'apiextensions.k8s.io'
    kind: 'CustomResourceDefinition'
  clusterResourceWhitelist:
  - group: '*'
    kind: '*'
  # -- Only permit applications to deploy to the previews namespace in the same cluster
  destinations:
  - namespace: 'previews'
    server: '*'
    name: '*'
  # -- Allow all namespaced-scoped resources to be created, except for AppProject
  namespaceResourceBlacklist:
  - group: 'argoproj.io'
    kind: 'AppProject'
  namespaceResourceWhitelist:
  - group: '*'
    kind: '*'
  orphanedResources:
    warn: false
  roles: []
  # -- Allow from all repositories
  sourceRepos:
  - '*'
  syncWindows: []

# -- GitHub repo configuration parameters
github:
  api: https://api.github.com
  label: 'preview'
  owner: 'saidsef'
  path: 'deployment'
  secretName: ''
  secretKey: ''

# -- GitLab repo configuration parameters
gitlab:
  api: https://gitlab.com
  group: 'saidsef'
  label: 'preview'
  path: 'deployment'
  secretName: ''
  secretKey: ''

# -- List of repo names and override images for preview environment
# to dynamically pass the branch of the pull request head use '{{branch}}' variable
# see: https://argocd-applicationset.readthedocs.io/en/stable/Generators-Pull-Request/#template
repos:
  gitlab:
  - name: service-a
    path: 'deployment/preview'
    project: 13
    repoUrl: 'https://gitlab.com/project/service-a.git'
  github: {}
  # - name: node-webserver
  #   images:
  #   - 'docker.io/saidsef/node-webserver:{{branch}}'
  # - name: alpine-jenkins-dockerfile
  #   path: 'deployment/preview'
  # - name: aws-kinesis-local
  #   images:
  #   - 'docker.io/saidsef/aws-kinesis-local:{{branch}}'
  # - name: aws-dynamodb-local
  #   images:
  #   - 'docker.io/saidsef/aws-dynamodb-local:{{branch}}'
  # - name: tika-document-to-text
  #   path: 'deployment/preview'
  # - name: k8s-spot-termination-notice
  #   images:
  #   - 'docker.io/saidsef/k8s-spot-termination-notice:merge'
  # - name: scapy-containerised
  #   path: 'charts/scapy'
  #   values:
  #     image:
  #       tag: '{{branch}}'
  # - name: faas-reverse-geocoding
  #   chart: 'reverse-geocoding'
  #   repoUrl: 'https://saidsef.github.io/faas-reverse-geocoding'
  #   parameters:
  #     - name: "image.tag"
  #       value: "{{branch}}"
  #     - name: "ingress.enabled"
  #       value: "true"
  #     - name: "ingress.enabled"
  #       value: "true"
  #     - name: "ingress.hosts[0].host"
  #       value: "{{branch}}"
